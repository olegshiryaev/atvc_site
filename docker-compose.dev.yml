version: "3.8"

volumes:
    pgdata:
    static:
    media:

services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django
    command: poetry run daphne -b 0.0.0.0 -p 8000 config.asgi:application
    volumes:
      - ./:/app
      - static:/app/static
      - media:/app/media
    ports:
      - "8000:8000"
    env_file:
      - docker/env/.env.dev
    depends_on:
      - postgres
      - redis

  channels-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: channels-worker
    command: poetry run python manage.py runworker channels
    volumes:
      - ./:/app
      - media:/app/media
    env_file:
      - docker/env/.env.dev
    depends_on:
      - redis
      - postgres

  nginx:
    container_name: nginx
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - static:/app/static
      - media:/app/media
      - ./docker/nginx/dev/:/etc/nginx/conf.d:ro
    depends_on:
      - django

  postgres:
    image: postgres:alpine
    container_name: postgres
    restart: always
    env_file:
      - docker/env/.env.dev
    volumes:
      - pgdata:/var/lib/postgresql/data/

  redis:
    image: redis:alpine
    container_name: redis
    env_file:
      - docker/env/.env.dev
    expose:
      - 6379
    volumes:
      - ./docker/redis/data:/data

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-worker
    restart: always
    env_file:
      - docker/env/.env.dev
    volumes:
      - ./:/app
      - media:/app/media
    command: poetry run celery -A config worker --loglevel=info --logfile=./docker/logs/celery-worker.log
    depends_on:
      - redis
      - postgres

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: celery-beat
    env_file:
      - docker/env/.env.dev
    depends_on:
      - redis
      - postgres
    command: poetry run celery -A config beat --loglevel=info --logfile=./docker/logs/celery-beat.log
    volumes:
      - ./:/app
      - media:/app/media

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flower
    env_file:
      - docker/env/.env.dev
    depends_on:
      - redis
    command: poetry run celery -A config flower --port=5555 --loglevel=info --logfile=./docker/logs/flower.log
    volumes:
      - ./:/app
    ports:
      - "5555:5555"